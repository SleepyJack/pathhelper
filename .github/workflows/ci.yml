name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
      - 't*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Shared setup
        id: setup
        uses: ./.github/actions/setup

      - name: Show version
        run: 'echo "Injected version: $VERSION"'
        env:
          VERSION: ${{ steps.setup.outputs.version }}

      - name: Run tests
        run: python -m unittest discover -s tests

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Shared setup
        id: setup
        uses: ./.github/actions/setup

      - name: Show version
        run: 'echo "Injected version: $VERSION"'
        env:
          VERSION: ${{ steps.setup.outputs.version }}

      - name: Build package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/*

  release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/t') }}
    needs: [test, build]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Shared setup
        id: setup
        uses: ./.github/actions/setup

      - name: Show version
        run: 'echo "Injected version: $VERSION"'
        env:
          VERSION: ${{ steps.setup.outputs.version }}

      - name: Determine release track
        id: track
        run: |
          if [[ "$GITHUB_REF" == refs/tags/t* ]]; then
            echo "repository_url=https://test.pypi.org/legacy/" >> "$GITHUB_OUTPUT"
            echo "token_name=TEST_PYPI_API_TOKEN" >> "$GITHUB_OUTPUT"
            echo "track=test" >> "$GITHUB_OUTPUT"
          else
            echo "repository_url=https://upload.pypi.org/legacy/" >> "$GITHUB_OUTPUT"
            echo "token_name=PYPI_API_TOKEN" >> "$GITHUB_OUTPUT"
            echo "track=release" >> "$GITHUB_OUTPUT"

      - name: Validate version format
        run: |
          VERSION=${{ steps.setup.outputs.version }}
          TRACK=${{ steps.track.outputs.track }}

          if [[ "$TRACK" == "test" ]]; then
            if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(rc[0-9]+|dev[0-9]+)?$ ]]; then
              echo "Test release version must follow 'X.Y.ZrcN' or 'X.Y.ZdevN'. Got: '$VERSION'"
              exit 1
            fi
          else
            if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Production release version must be 'X.Y.Z'. Got: '$VERSION'"
              exit 1
            fi
          fi

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist

      - name: Upload to PyPI/Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets[steps.track.outputs.token_name] }}
        run: twine upload --repository-url ${{ steps.track.outputs.repository_url }} dist/*
