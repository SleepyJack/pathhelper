name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Shared setup
        id: setup
        uses: ./.github/actions/setup

      - name: Show version
        run: echo "Injected version: $VERSION"
        env:
          VERSION: ${{ steps.setup.outputs.version }}

      - name: Run tests
        run: python -m unittest discover -s tests

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Shared setup
        id: setup
        uses: ./.github/actions/setup

      - name: Show version
        run: echo "Injected version: $VERSION"
        env:
          VERSION: ${{ steps.setup.outputs.version }}

      - name: Build package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/*

  release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [test, build]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Shared setup
        id: setup
        uses: ./.github/actions/setup

      - name: Show version
        run: echo "Injected version: $VERSION"
        env:
          VERSION: ${{ steps.setup.outputs.version }}

      - name: Validate version format
        run: |
          VERSION=${{ steps.setup.outputs.version }}
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version '$VERSION' is not in the format major.minor.patch"
            exit 1
          fi

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist

      - name: Upload to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: twine upload --repository-url https://test.pypi.org/legacy/ dist/*
